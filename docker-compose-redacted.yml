version: "3"
services:
  appdaemon:
    container_name: appdaemon
    depends_on:
      - hass
    image: acockburn/appdaemon:4.1.0
    labels: 
      - wud.tag.include=^\d+\.\d+\.\d+$$
      - wud.watch=true
    ports:
      - "5050:5050"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./appdaemon:/conf

  esphome-dashboard:
    container_name: esphome-dashboard
    image: esphome/esphome:2021.8.2
    labels: 
      - wud.tag.include=^\d+\.\d+\.\d+$$
      - wud.watch=true
    network_mode: host
    restart: unless-stopped
    volumes: 
      - ./esphome:/config
      - /etc/localtime:/etc/localtime:ro

  grafana:
    container_name: grafana
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=secretusername
      - GF_SECURITY_ADMIN_PASSWORD=supersecretpassword
    image: grafana/grafana:8.1.2
    labels: 
      - wud.tag.include=^\d+\.\d+\.\d+$$
      - wud.watch=true
    restart: unless-stopped
    user: "1000"
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
      - /etc/localtime:/etc/localtime:ro

  hass:
    container_name: hass
    image: homeassistant/home-assistant:2021.9.4
    network_mode: host
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./home-assistant:/config
      - /home/burningstone/.ssh:/root/.ssh
      - /mnt/nas/burningstone/Musik:/media

  hass-db:
    container_name: hass-db
    environment:
      POSTGRES_DB: "smart_home"
      POSTGRES_PASSWORD: "supersecretpassword"
      POSTGRES_USER: "secretusername"
    image: "postgres:9.6.19-alpine"
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./home-assistant-db:/var/lib/postgresql/data

  influxdb:
    container_name: influxdb
    image: influxdb:2.0.8
    labels: 
      - wud.tag.include=^\d+\.\d+\.\d+$$
      - wud.watch=true
    ports:
      - "8086:8086"
    restart: unless-stopped
    volumes:
      - ./influxdb2:/var/lib/influxdb2
      - /etc/localtime:/etc/localtime:ro

  mopidy_balcony:
    build:
      context: ./mopidy/docker
    container_name: mopidy_balcony
    image: burningstone/mopidy
    ports:
      - "6684:6680"
      - "6604:6600"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./snapserver/snapfifo:/run/snapserver/
      - ./mopidy/balcony/mopidy.conf:/config/mopidy.conf
      - ./music:/var/lib/mopidy/media:ro
      - ./mopidy/local:/var/lib/mopidy/local
      
  mopidy_bedroom:
    build:
      context: ./mopidy/docker
    container_name: mopidy_bedroom
    image: burningstone/mopidy
    ports:
      - "6681:6680"
      - "6601:6600"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./snapserver/snapfifo:/run/snapserver/
      - ./mopidy/bedroom/mopidy.conf:/config/mopidy.conf
      - ./music:/var/lib/mopidy/media:ro
      - ./mopidy/local:/var/lib/mopidy/local

  mopidy_livingroom:
    build:
      context: ./mopidy/docker
    container_name: mopidy_livingroom
    image: burningstone/mopidy
    ports:
      - "6682:6680"
      - "6602:6600"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./snapserver/snapfifo:/run/snapserver/
      - ./mopidy/livingroom/mopidy.conf:/config/mopidy.conf
      - ./music:/var/lib/mopidy/media:ro
      - ./mopidy/local:/var/lib/mopidy/local

  mopidy_office:
    build:
      context: ./mopidy/docker
    container_name: mopidy_office
    image: burningstone/mopidy
    ports:
      - "6683:6680"
      - "6603:6600"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./snapserver/snapfifo:/run/snapserver/
      - ./mopidy/office/mopidy.conf:/config/mopidy.conf
      - ./music:/var/lib/mopidy/media:ro
      - ./mopidy/local:/var/lib/mopidy/local

  mopidy_tts:
    build:
      context: ./mopidy/docker
    container_name: mopidy_tts
    image: burningstone/mopidy
    ports:
      - "6680:6680"
      - "6600:6600"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./snapserver/snapfifo:/run/snapserver/
      - ./mopidy/tts/mopidy.conf:/config/mopidy.conf

  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto:2.0.12
    labels: 
      - wud.tag.include=^\d+\.\d+\.\d+$$
      - wud.watch=true
    ports:
      - "1883:1883"
      - "9001:9001"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/config/passwd:/mosquitto/config/passwd
      - ./mosquitto/log:/mosquitto/log
      - ./mosquitto/data:/mosquitto/data

  portainer:
    container_name: portainer
    image: portainer/portainer:1.24.2
    labels: 
      - wud.tag.include=^\d+\.\d+\.\d+$$
      - wud.watch=true
    ports:
      - "9000:9000"
      - "8000:8000"
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer:/data

  snapserver:
    build: 
      context: ./snapserver
    container_name: snapserver
    environment:
      - DEVICE_NAME=MultiRoom
    image: burningstone/snapserver
    ports:
      - "1704:1704"
      - "1705:1705"
      - "1780:1780"
      - "5353:5353"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./snapserver/snapserver.conf:/etc/snapserver.conf
      - ./snapserver/snapfifo:/run/snapserver/

  swag:
    cap_add:
      - NET_ADMIN
    container_name: swag
    environment:
      - PUID=1000
      - PGID=1004
      - TZ=Europe/Zurich
      - URL=yourdomain.com
      - VALIDATION=http
      - EMAIL=yourmail@address.com
    image: linuxserver/swag:version-1.18.0
    labels:
      - wud.watch=true
      - wud.tag.include=^version-\d+\.\d+\.\d+$$
    networks:
      default:
        ipv4_address: 172.19.0.132
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./swag:/config

  wud:
    container_name: wud
    environment:
      - WUD_TRIGGER_MQTT_MOSQUITTO_URL=mqtt://ip-of-mqtt-broker:1883
      - WUD_TRIGGER_MQTT_MOSQUITTO_USER=yourmqttusername
      - WUD_TRIGGER_MQTT_MOSQUITTO_PASSWORD=yoursupersecretmqttpassword
      - WUD_TRIGGER_MQTT_MOSQUITTO_HASS_ENABLED=true
      - WUD_WATCHER_LOCAL_SOCKET=/var/run/docker.sock
      - WUD_WATCHER_LOCAL_WATCHBYDEFAULT=false
      - WUD_WATCHER_CLOUD_HOST=10.10.10.14
      - WUD_WATCHER_CLOUD_PORT=2375
      - WUD_WATCHER_CLOUD_WATCHBYDEFAULT=false
      - WUD_WATCHER_INVESTMENT_HOST=10.10.10.16
      - WUD_WATCHER_INVESTMENT_PORT=2375
      - WUD_WATCHER_INVESTMENT_WATCHBYDEFAULT=false
    image: fmartinou/whats-up-docker:5.4.0
    labels: 
      - wud.tag.include=^\d+\.\d+\.\d+$$
      - wud.watch=true
    restart: unless-stopped
    ports:
      - "3005:3000"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./wud:/store

networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/24
