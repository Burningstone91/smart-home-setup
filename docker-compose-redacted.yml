version: "3"
services:
  appdaemon:
    container_name: appdaemon
    image: acockburn/appdaemon:4.0.5
    depends_on:
      - hass
    ports:
      - "5050:5050"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./appdaemon:/conf

  esphome-dashboard:
    container_name: esphome-dashboard
    image: esphome/esphome:latest
    network_mode: host
    restart: unless-stopped
    volumes: 
      - ./esphome:/config
      - /etc/localtime:/etc/localtime:ro

  grafana:
    container_name: grafana
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=secretusername
      - GF_SECURITY_ADMIN_PASSWORD=supersecretpassword
    image: grafana/grafana:latest
    restart: unless-stopped
    user: "1000"
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
      - /etc/localtime:/etc/localtime:ro

  hass:
    container_name: hass
    image: homeassistant/home-assistant:0.118.0
    network_mode: host
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./home-assistant:/config
      - /home/burningstone/.ssh:/root/.ssh
      - /mnt/nas/burningstone/Musik:/media

  hass-db:
    container_name: hass-db
    environment:
      POSTGRES_DB: "smart_home"
      POSTGRES_PASSWORD: "supersecretpassword"
      POSTGRES_USER: "secretusername"
    image: "postgres:9.6.19-alpine"
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./home-assistant-db:/var/lib/postgresql/data

  influxdb:
    container_name: influxdb
    environment:
      - INFLUXDB_DB=smart_home
      - INFLUXDB_ADMIN_USER=secretusername
      - INFLUXDB_ADMIN_PASSWORD=supersecretpassword
    image: influxdb:latest
    ports:
      - "8086:8086"
    restart: unless-stopped
    volumes:
      - ./influxdb:/var/lib/influxdb
      - /etc/localtime:/etc/localtime:ro

  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto
    ports:
      - "1883:1883"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/log:/mosquitto/log
      - ./mosquitto/data:/mosquitto/data

  mopidy_bedroom:
    build:
      context: ./mopidy/docker
    container_name: mopidy_bedroom
    image: burningstone/mopidy
    ports:
      - "6681:6680"
      - "6601:6600"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./snapserver/snapfifo:/run/snapserver/
      - ./mopidy/bedroom/mopidy.conf:/config/mopidy.conf
      - ./music:/var/lib/mopidy/media:ro
      - ./mopidy/local:/var/lib/mopidy/local

  mopidy_livingroom:
    build:
      context: ./mopidy/docker
    container_name: mopidy_livingroom
    image: burningstone/mopidy
    ports:
      - "6682:6680"
      - "6602:6600"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./snapserver/snapfifo:/run/snapserver/
      - ./mopidy/livingroom/mopidy.conf:/config/mopidy.conf
      - ./music:/var/lib/mopidy/media:ro
      - ./mopidy/local:/var/lib/mopidy/local

  mopidy_office:
    build:
      context: ./mopidy/docker
    container_name: mopidy_office
    image: burningstone/mopidy
    ports:
      - "6683:6680"
      - "6603:6600"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./snapserver/snapfifo:/run/snapserver/
      - ./mopidy/office/mopidy.conf:/config/mopidy.conf
      - ./music:/var/lib/mopidy/media:ro
      - ./mopidy/local:/var/lib/mopidy/local

  mopidy_tts:
    build:
      context: ./mopidy/docker
    container_name: mopidy_tts
    image: burningstone/mopidy
    ports:
      - "6680:6680"
      - "6600:6600"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./snapserver/snapfifo:/run/snapserver/
      - ./mopidy/tts/mopidy.conf:/config/mopidy.conf

  portainer:
    container_name: portainer
    image: "portainer/portainer:latest"
    ports:
      - "9000:9000"
      - "8000:8000"
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer:/data

  nextcloud:
    container_name: nextcloud
    depends_on:
      - nextcloud-db
    environment:
      POSTGRES_DB: "nextcloud"
      POSTGRES_PASSWORD: secretusername
      POSTGRES_USER: supersecretusername
      POSTGRES_HOST: nextcloud-db
    image: nextcloud
    ports:
      - "9001:80"
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./nextcloud/config:/var/www/html

  nextcloud-db:
    container_name: nextcloud-db
    environment:
      POSTGRES_DB: "nextcloud"
      POSTGRES_USER: secretusername
      POSTGRES_PASSWORD: supersecretpassword
    image: "postgres:9.6.19-alpine"
    ports:
      - "5433:5432"
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./nextcloud/data:/var/lib/postgresql/data

  snapserver:
    build: 
      context: ./snapserver
    container_name: snapserver
    environment:
      - DEVICE_NAME=MultiRoom
    image: burningstone/snapserver
    ports:
      - "1704:1704"
      - "1705:1705"
      - "1780:1780"
      - "5353:5353"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./snapserver/snapserver.conf:/etc/snapserver.conf
      - ./snapserver/snapfifo:/run/snapserver/

  swag:
    cap_add:
      - NET_ADMIN
    container_name: swag
    environment:
      - PUID=1000
      - PGID=1004
      - TZ=Europe/Zurich
      - URL=yourdomain.com
      - VALIDATION=http
      - EMAIL=yourmail@address.com
    image: ghcr.io/linuxserver/swag
    networks:
      default:
        ipv4_address: 172.19.0.132
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./swag:/config

networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/24