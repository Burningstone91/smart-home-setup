shopping_list:

group:
  household_tasks:
    name: Haushaltsaufgaben
    entities:
      - sensor.chore_clean_dust
      - sensor.chore_vacuum_clean
      - sensor.chore_clean_floor_wet
      - sensor.chore_oil_floor
      - sensor.chore_clean_window_frames
      - sensor.chore_clean_windows
      - sensor.chore_clean_covers
      - sensor.chore_clean_curtains
      - sensor.chore_dechalk
      - sensor.chore_clean_furniture
      - sensor.chore_clean_cupboards
      - sensor.chore_clean_mailbox
      - sensor.chore_clean_oven
      - sensor.chore_clean_fridge
      - sensor.chore_defrost_fridge
      - sensor.chore_clean_steam_exhaust
      - sensor.chore_dispose_bottles
      - sensor.chore_clean_dishwasher
      - sensor.chore_clean_coffe_machine
      - sensor.chore_check_food_fridge
      - sensor.chore_change_cloths
      - sensor.chore_clean_doors
      - sensor.chore_clean_toilet
      - sensor.chore_change_towels
      - sensor.chore_clean_bath
      - sensor.chore_clean_mirror
      - sensor.chore_clean_siphon
      - sensor.chore_change_bed_sheets
      - sensor.chore_turn_mattress
      - sensor.chore_clean_pillow_bedsheets
      - sensor.chore_clean_wardrobe
      - sensor.chore_declutter_wardrobe
      - sensor.chore_mow_lawn
      - sensor.chore_clean_grill
      - sensor.chore_check_grill_gas
      - sensor.chore_clean_wash_machine
      - sensor.chore_clean_tumble_dryer
      - sensor.chore_clean_fur
      - sensor.chore_clean_ears
      - sensor.chore_clean_food_bowl
      - sensor.chore_cut_claws

automation:
# Notify on household task due
- id: notify_on_household_task_due
  alias: "Benachrichtigung wenn eine Haushaltsaufgabe bald f√§llig ist"
  variables:
    entities: "group.household_tasks"
  trigger:
    - platform: time
      at: "16:57:00"
  action:
    - repeat:
        count: "{{ expand(entities) | list | count }}"
        sequence:
          - variables:
              entity_id: >
                {% set tasks = expand(entities) | map(attribute='entity_id') | list %}
                {{ tasks[repeat.index - 1] }}
              task_id: "{{ entity_id.split('.')[1] }}"
              last_done_days: "{{ ((as_timestamp(now()) - (as_timestamp(states(entity_id))) | float) / 60 / 60 / 24) | int }}"
              cycle_days: "{{ state_attr(entity_id, 'cycle_days') | int }}"
              warn_before_days: "{{ state_attr(entity_id, 'warning_before') | int }}"
          - condition: template
            value_template: "{{ last_done_days|int >= (cycle_days|int - warn_before_days|int) }}"
          - service: notify.mobile_app_phone_dimitri
            data:
              title: "üßπ {{ state_attr(entity_id, 'friendly_name') }}"
              message: >
                Aufgabe zuletzt vor {{ last_done_days }} Tagen erledigt.
              data: 
                group: household-tasks
                tag: "{{ task_id }}"
                actions:
                  - action: done
                    title: "Erledigt"

# Mark task as solved and reply
- id: mark_task_solved_when_confirmed
  alias: "Markiere Aufgabe als erledigt und bedanke bei Benutzer"
  trigger:
    platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: done
  action:
    - variables:
        task_id: "{{ trigger.event.data.tag }}"
        sensor_name: "{{ 'sensor.' + task_id }}"
        task_name: "{{ state_attr(sensor_name, 'friendly_name') }}"
        executor: >
          {% set user_id = trigger.event.context.user_id %}
          {% set id_map = {
            "6a6a294246724ba6a185d7830d21d48c": "dimitri",
            "fb7da472ed7545edbca64c66440bce41": "sabrina"
          } %}
          {{ id_map[user_id] }}
        other_person: "{{ 'dimitri' if executor == 'sabrina' else 'dimitri' }}"
    # Mark task as solved by publishing timestamp to task topic
    - service: mqtt.publish
      data:
        topic: "homeassistant/sensor/{{task_id}}/state"
        payload: >
          {
            "state": "{{ now().isoformat() }}",
            "attributes": {
              "executor": "{{ executor.title() }}",
              "cycle_days": {{ state_attr(sensor_name, 'cycle_days') }},
              "warning_before": {{ state_attr(sensor_name, 'warning_before') }}
            } 
          }
        retain: true
    # Thank person who did the task
    - service: "notify.mobile_app_phone_{{ executor }}"
      data:
        title: "üí™ Danke!"
        message: "Herzlichen Dank daf√ºr, dass du die Aufgabe '{{ task_name }}' erledigt hast!"
    # Clear notification from other person's phone
    - service: "notify.mobile_app_phone_{{ other_person }}"
      data:
        message: clear_notification
        data:
          tag: "{{ task_id }}"
    # Notify other person that task has been done already
    - service: "notify.mobile_app_phone_{{ other_person }}"
      data:
        title: "üôè Erledigt!"
        message: "{{ executor.title() }} hat die Aufgabe '{{ task_name }}' bereits erledigt!"

# Entity Customization
homeassistant:
  customize:
    sensor.chore_clean_dust:
      friendly_name: Abstauben
    sensor.chore_vacuum_clean:
      friendly_name: Staubsaugen
    sensor.chore_clean_floor_wet:
      friendly_name: Boden aufnehmen
    sensor.chore_oil_floor:
      friendly_name: Boden ein√∂len
    sensor.chore_clean_window_frames:
      friendly_name: Fensterb√§nke reinigen
    sensor.chore_clean_windows:
      friendly_name: Fenster reinigen
    sensor.chore_clean_covers:
      friendly_name: Rollos reinigen
    sensor.chore_clean_curtains:
      friendly_name: Vorh√§nge reinigen
    sensor.chore_dechalk:
      friendly_name: Entkalken
    sensor.chore_clean_furniture:
      friendly_name: M√∂bel pflegen
    sensor.chore_clean_cupboards:
      friendly_name: Schr√§nke reinigen
    sensor.chore_clean_mailbox:
      friendly_name: Briefkasten reinigen
    sensor.chore_clean_oven:
      friendly_name: Backofen reinigen
    sensor.chore_clean_fridge:
      friendly_name: K√ºhlschrank reinigen
    sensor.chore_defrost_fridge:
      friendly_name: K√ºhlschrank abtauen
    sensor.chore_clean_steam_exhaust:
      friendly_name: Dampfabzug reinigen
    sensor.chore_dispose_bottles:
      friendly_name: Flaschen entsorgen
    sensor.chore_clean_dishwasher:
      friendly_name: Geschirrsp√ºler reinigen
    sensor.chore_clean_coffe_machine:
      friendly_name: Kaffeemaschine reinigen
    sensor.chore_check_food_fridge:
      friendly_name: Lebensmittel pr√ºfen
    sensor.chore_change_cloths:
      friendly_name: Putzlappen wechseln
    sensor.chore_clean_doors:
      friendly_name: T√ºren abwaschen
    sensor.chore_clean_toilet:
      friendly_name: Toilette reinigen
    sensor.chore_change_towels:
      friendly_name: Handt√ºcher wechseln
    sensor.chore_clean_bath:
      friendly_name: Bad reinigen
    sensor.chore_clean_mirror:
      friendly_name: Spiegel reinigen
    sensor.chore_clean_siphon:
      friendly_name: Siphon reinigen
    sensor.chore_change_bed_sheets:
      friendly_name: Bettw√§sche wechseln
    sensor.chore_turn_mattress:
      friendly_name: Matratze wenden
    sensor.chore_clean_pillow_bedsheets:
      friendly_name: Kissen/Decken waschen
    sensor.chore_clean_wardrobe:
      friendly_name: Kleiderschrank reinigen
    sensor.chore_declutter_wardrobe:
      friendly_name: Kleider ausmisten
    sensor.chore_mow_lawn:
      friendly_name: Rasen m√§hen
    sensor.chore_clean_grill:
      friendly_name: Grill reinigen
    sensor.chore_check_grill_gas:
      friendly_name: Griss Gas pr√ºfen
    sensor.chore_clean_wash_machine:
      friendly_name: Waschmaschine reinigen
    sensor.chore_clean_tumble_dryer:
      friendly_name: Tumbler reinigen
    sensor.chore_clean_fur:
      friendly_name: Fell b√ºrsten
    sensor.chore_clean_ears:
      friendly_name: Ohren putzen
    sensor.chore_clean_food_bowl:
      friendly_name: Napf reinigen
    sensor.chore_cut_claws:
      friendly_name: Krallen schneiden
