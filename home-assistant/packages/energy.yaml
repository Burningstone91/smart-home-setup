energy:

input_number:
  # Electricity peak price
  electricity_price_peak:
    name: Strompreis HT kWh
    min: 0
    max: 2
    step: 0.01
  # Electricity off-peak price
  electricity_price_off_peak:
    name: Strompreis NT kWh
    min: 0
    max: 2
    step: 0.01

# Powercalc General Settings
powercalc:
  create_energy_sensors: false

sensor:
  # Convert power (W) to energy (kWh) 
  - platform: integration
    source: sensor.power_lights
    name: energy_lights
    unit_prefix: k
    round: 2

template:
  - sensor:
      # Power consumption of all lights
      - name: power lights
        device_class: power
        unit_of_measurement: W
        state: >
          {% set office = states('sensor.power_light_office')|float %}
          {% set bedroom_ceiling = states('sensor.power_light_bedroom_ceiling')|float %}
          {% set bedroom_bed = states('sensor.power_light_bedroom_bed')|float %}
          {% set dressroom = states('sensor.power_light_dressroom')|float %}
          {% set livingroom = states('sensor.power_light_livingroom_floor_front')|float + states('sensor.power_light_livingroom_back')|float %}
          {{ office + bedroom_ceiling + bedroom_bed + dressroom + livingroom }}
      # Current Electricity Tariff
      - name: electricity tariff
        device_class: monetary
        unit_of_measurement: CHF
        state: >
          {% set day = now().weekday() %}
          {% set hour = now().hour %}
          {% if (day == 5 and 7 <= hour < 13) or (day < 5 and 7 <= hour < 20) %}
            Hochtarif
          {% else %}
            Niedertarif
          {% endif %}
      # Current Electricity Price
      - name: electricity price
        device_class: monetary
        unit_of_measurement: CHF
        state: >
          {% set peak_price = states('input_number.electricity_price_peak') %}
          {% set off_peak_price = states('input_number.electricity_price_off_peak') %}
          {% set tariff = states('sensor.electricity_tariff') %}
          {% if tariff == "Hochtarif" %}
            {{ peak_price }}
          {% else %}
            {{ off_peak_price }}
          {% endif %}

# Utility Meter Lights
utility_meter:
  energy_quarterly_lights:
    source: sensor.energy_quarterly_lights
    cycle: quarterly
    tariffs:
      - Hochtarif
      - Niedertarif

automation:
  # Set Electricity Tariff
  - id: set_tariffs
    alias: Stromtarif Update
    mode: single
    trigger:
      - platform: state
        entity_id: sensor.electricity_tariff
    action:
      - service: utility_meter.select_tariff
        target:
          entity_id: 
            - utility_meter.energy_quarterly_dishwasher
            - utility_meter.energy_quarterly_lights
        data:
          tariff: "{{ trigger.to_state.state }}"

# Entity Customization
homeassistant:
  customize:
    # Tariff
    sensor.electricity_tariff:
      friendly_name: Stromtarif
    # Electricity Price
    sensor.electricity_price:
      friendly_name: Strompreis
    # Energy Lights
    sensor.energy_lights:
      friendly_name: Konsum Licht