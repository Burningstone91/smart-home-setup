
################################
# Proxmox for VM running on NUC
################################
proxmoxve:
  host: 10.10.40.6
  username: !secret pve_user
  password: !secret pve_pass
  realm: pve
  verify_ssl: false
  nodes:
    - node: pve
      vms:
        - 101
        - 102
        - 103
        - 105

###############################
# Monitoring Docker Containers
###############################
monitor_docker:
  - name: Docker
    containers:
      - appdaemon
      - esphome-dashboard
      - hass
      - hass-db
      - mqtt
      - influxdb
      - grafana
      - portainer
      - unifi-poller
    rename:
      appdaemon: AppDaemon
      esphome-dashboard: "ESPHome-Dashboard"
      hass: Home Assistant
      hass-db: Postgres
      mqtt: Mosquitto
      influxdb: InfluxDB
      grafana: Grafana
      portainer: Portainer
      unifi-poller: "Unifi-Poller"
    monitored_conditions:
      - version
      - status
      - image
      - cpu_percentage
      - memory_percentage

sensor:
  ################
  # Date and Time
  ################
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
  ########################
  # SystemMonitor for NUC
  ########################
  - platform: systemmonitor
    resources:
    - type: disk_use_percent
      arg: /home
    - type: disk_use
      arg: /home
    - type: disk_free
      arg: /home
    - type: memory_free
    - type: memory_use
    - type: memory_use_percent
    - type: swap_use_percent
    - type: swap_use
    - type: swap_free
    - type: load_1m
    - type: load_5m
    - type: load_15m
    - type: network_in
      arg: ens18
    - type: network_out
      arg: ens18
    - type: throughput_network_in
      arg: ens18
    - type: throughput_network_out
      arg: ens18
    - type: packets_in
      arg: ens18
    - type: packets_out
      arg: ens18
    - type: processor_use
    - type: last_boot   
    - type: ipv4_address
      arg: ens18
  ##################
  # Temperature NUC
  ##################
  - platform: command_line
    name: temperature_cpu_nuc
    command: 'ssh -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no -q root@10.10.40.6 cat /sys/class/thermal/thermal_zone3/temp'
    value_template: "{{ value | int / 1000 }}"
    unit_of_measurement: "°C"
  #################
  # Home Assistant
  #################
  # Uptime
  - platform: uptime
    name: uptime_home_assistant_minutes
    unit_of_measurement: minutes
  - platform: template
    sensors:
      uptime_home_assistant:
        value_template: >
          {%- set value = states('sensor.uptime_home_assistant_minutes') | float %}
          {%- set time = (value * 60) | int %}
          {%- set minutes = ((time % 3600) // 60) %}
          {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
          {%- set hours = ((time % 86400) // 3600) %}
          {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
          {%- set days = (time // 86400) %}
          {%- set days = '{}d '.format(days) if days > 0 else '' %}
          {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
  ###################
  # Postgres DB Size
  ###################
  - platform: sql
    db_url: !secret db_url
    queries:
      - name: DB size Hass
        query: "SELECT (pg_database_size('smart_home')/1024/1024) as db_size;"
        column: "db_size"
        unit_of_measurement: MB
  ####################
  # Software Versions
  ####################
  # Home Assistant
  - platform: version
    name: latest_version_homeassistant
    source: docker
    beta: true
  - platform: version
    name: current_version_homeassistant
  # AppDaemon
  - platform: command_line
    name: latest_version_appdaemon
    command: >-
      curl -L
      -H "User-Agent: Home Assistant"
      -H "Content-Type: application/json"
      https://pypi.python.org/pypi/appdaemon/json
    value_template: '{{ value_json.info.version }}'
    scan_interval: 3600
  # Pi-hole
  ## Pi-hole Core
  - platform: rest
    resource: http://10.10.0.8/admin/api.php?versions
    name: latest_version_pihole_core
    value_template: "{{ value_json.core_latest[1:] }}"
  - platform: rest
    resource: http://10.10.0.8/admin/api.php?versions
    name: current_version_pihole_core
    value_template: "{{ value_json.core_current[1:] }}"
  ## Pi-hole Web
  - platform: rest
    resource: http://10.10.0.8/admin/api.php?versions
    name: latest_version_pihole_web
    value_template: "{{ value_json.web_latest[1:] }}"
  - platform: rest
    resource: http://10.10.0.8/admin/api.php?versions
    name: current_version_pihole_web
    value_template: "{{ value_json.web_current[1:] }}"
  ## Pi-hole FTL
  - platform: rest
    resource: http://10.10.0.8/admin/api.php?versions
    name: latest_version_pihole_ftl
    value_template: "{{ value_json.FTL_latest[1:] }}"
  - platform: rest
    resource: http://10.10.0.8/admin/api.php?versions
    name: current_version_pihole_ftl
    value_template: "{{ value_json.FTL_current[1:] }}"
  # Mosquitto
  - platform: mqtt
    state_topic: "docker-image-updates/mosquitto"
    name: Update Mosquitto
  # ESP Home
  - platform: mqtt
    state_topic: "docker-image-updates/esphome"
    name: Update ESPHome
  # Grafana
  - platform: mqtt
    state_topic: "docker-image-updates/grafana"
    name: Update Grafana
  # InfluxDB
  - platform: mqtt
    state_topic: "docker-image-updates/influxdb"
    name: Update InfluxDB
  # UniFi Poller
  - platform: mqtt
    state_topic: "docker-image-updates/unifi-poller"
    name: Update UniFi Poller
  # Portainer
  - platform: mqtt
    state_topic: "docker-image-updates/portainer"
    name: Update Portainer
  # Proxmox
  - platform: command_line
    name: Version Proxmox VE 
    command: 'ssh -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no -q root@10.10.40.6 pveversion | cut -f2 -d/'
    scan_interval: 3600
  ###############
  # Synology NAS
  ###############
  # Model
  - platform: snmp
    name: Model NAS
    host: 10.10.40.15
    community: 'public'
    baseoid: 1.3.6.1.4.1.6574.1.5.1.0
  # Firmware
  - platform: snmp
    name: Firmware NAS
    host: 10.10.40.15
    community: 'public'
    baseoid: 1.3.6.1.4.1.6574.1.5.3.0
  # Firmware Upgrade Available
  - platform: snmp
    name: Firmware Upgrade NAS
    host: 10.10.40.15
    community: 'public'
    baseoid: 1.3.6.1.4.1.6574.1.5.4.0
    value_template: >
      {% set mapping = {
        '1': 'Upgrade available',
        '2': 'Up-to-date',
        '3': 'Unknown',
        '4': 'Unknown',
        '5': 'Unknown'
      } %}
      {{ mapping[value] if value in mapping else 'error' }}
  # Uptime
  - platform: snmp
    name: Uptime NAS
    host: 10.10.40.15
    community: 'public'
    baseoid: 1.3.6.1.2.1.25.1.1.0
    value_template: >
      {%- set time = value | int // 100 %}
      {%- set minutes = ((time % 3600) // 60) %}
      {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
      {%- set hours = ((time % 86400) // 3600) %}
      {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
      {%- set days = (time // 86400) %}
      {%- set days = '{}d '.format(days) if days > 0 else '' %}
      {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
  ################
  # Unifi Devices
  ################
  # AP Livingroom
  ## Model
  - platform: snmp
    name: Model AP livingroom
    host: 10.10.0.14
    community: 'public'
    baseoid: 1.3.6.1.4.1.41112.1.6.3.3.0
  ## Uptime
  - platform: snmp
    name: Uptime AP livingroom
    host: 10.10.0.14
    community: 'public'
    baseoid: 1.3.6.1.2.1.1.3.0
    value_template: >
      {%- set time = value | int // 100 %}
      {%- set minutes = ((time % 3600) // 60) %}
      {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
      {%- set hours = ((time % 86400) // 3600) %}
      {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
      {%- set days = (time // 86400) %}
      {%- set days = '{}d '.format(days) if days > 0 else '' %}
      {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
  ## Firmware
  - platform: snmp
    name: Firmware AP livingroom
    host: 10.10.0.14
    community: 'public'
    baseoid: 1.3.6.1.4.1.41112.1.6.3.6.0
  # Switch Livingroom
  ## Temperature
  - platform: snmp
    name: Temperature Switch Livingroom
    host: 10.10.0.6
    community: 'public'
    baseoid: 1.3.6.1.4.1.4413.1.1.43.1.8.1.5.1.0
    unit_of_measurement: "°C"
  ## Uptime
  - platform: snmp
    name: Uptime Switch Livingroom
    host: 10.10.0.6
    community: 'public'
    baseoid: 1.3.6.1.2.1.1.3.0
    value_template: >
      {%- set time = value | int // 100 %}
      {%- set minutes = ((time % 3600) // 60) %}
      {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
      {%- set hours = ((time % 86400) // 3600) %}
      {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
      {%- set days = (time // 86400) %}
      {%- set days = '{}d '.format(days) if days > 0 else '' %}
      {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
  ## Model
  - platform: snmp
    name: Model Switch Livingroom
    host: 10.10.0.6
    community: 'public'
    baseoid: 1.3.6.1.4.1.4413.1.1.1.1.1.2.0
  ## Firmware
  - platform: snmp
    name: Firmware Switch Livingroom
    host: 10.10.0.6
    community: 'public'
    baseoid: 1.3.6.1.4.1.4413.1.1.1.1.1.13.0
  # Switch Storageroom
  ## Uptime
  - platform: snmp
    name: Uptime Switch Storageroom
    host: 10.10.0.10
    community: 'public'
    baseoid: 1.3.6.1.2.1.1.3.0
    value_template: >
      {%- set time = value | int // 100 %}
      {%- set minutes = ((time % 3600) // 60) %}
      {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
      {%- set hours = ((time % 86400) // 3600) %}
      {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
      {%- set days = (time // 86400) %}
      {%- set days = '{}d '.format(days) if days > 0 else '' %}
      {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
  ## Model
  - platform: snmp
    name: Model Switch Storageroom
    host: 10.10.0.10
    community: 'public'
    baseoid: 1.3.6.1.4.1.4413.1.1.1.1.1.2.0
  ## Firmware
  - platform: snmp
    name: Firmware Switch Storageroom
    host: 10.10.0.10
    community: 'public'
    baseoid: 1.3.6.1.4.1.4413.1.1.1.1.1.13.0
  # USG Router Livingroom
  ## CPU 1 min
  - platform: snmp
    name: cpu_load_1m_usg
    host: 10.10.0.1
    community: 'public'
    baseoid: 1.3.6.1.4.1.2021.10.1.3.1
    value_template: "{{ ( value | float * 100 )| int }}"
    unit_of_measurement: "%"
  ## CPU 5 mins
  - platform: snmp
    name: cpu_load_5m_usg
    host: 10.10.0.1
    community: 'public'
    baseoid: 1.3.6.1.4.1.2021.10.1.3.2
    value_template: "{{ ( value | float * 100 )| int }}"
    unit_of_measurement: "%"
  ## CPU 15 mins
  - platform: snmp
    name: cpu_load_15m_usg
    host: 10.10.0.1
    community: 'public'
    baseoid: 1.3.6.1.4.1.2021.10.1.3.3
    value_template: "{{ ( value | float * 100 )| int }}"
    unit_of_measurement: "%"
  ## CPU 0 Load
  - platform: snmp
    name: cpu_0_load_usg
    host: 10.10.0.1
    community: 'public'
    baseoid: 1.3.6.1.2.1.25.3.3.1.2.196608
    unit_of_measurement: "%"
  ## CPU 1 Load
  - platform: snmp
    name: cpu_1_load_usg
    host: 10.10.0.1
    community: 'public'
    baseoid: 1.3.6.1.2.1.25.3.3.1.2.196609
    unit_of_measurement: "%"
  ### CPU Load average
  - platform: min_max
    name: cpu_load_usg
    type: mean
    entity_ids:
      - sensor.cpu_0_load_usg
      - sensor.cpu_1_load_usg    
  ## Uptime
  - platform: snmp
    name: Uptime USG
    host: 10.10.0.1
    community: 'public'
    baseoid: 1.3.6.1.2.1.1.3.0
    value_template: >
      {%- set time = value | int // 100 %}
      {%- set minutes = ((time % 3600) // 60) %}
      {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
      {%- set hours = ((time % 86400) // 3600) %}
      {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
      {%- set days = (time // 86400) %}
      {%- set days = '{}d '.format(days) if days > 0 else '' %}
      {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
  ## Firmware
  - platform: snmp
    name: Firmware USG
    host: 10.10.0.1
    community: 'public'
    baseoid: 1.3.6.1.2.1.1.1.0
    value_template: "{{ '.'.join(value.split('.')[:3]) }}"
  ## WAN In
  - platform: snmp
    name: WAN In USG
    host: 10.10.0.1
    baseoid: 1.3.6.1.2.1.31.1.1.1.6.2
    community: 'public'
    version: '2c'
    scan_interval: 10
  - platform: derivative
    source: sensor.wan_in_usg
    unit_time: s
    unit: B
    name: wan_in_usg_derivative  
  - platform: template
    sensors:
      wan_in_usg_mbps:
        value_template:  "{{ ((states('sensor.wan_in_usg_derivative')|float*8)/1000000)|round(2) }}"
        unit_of_measurement: 'Mbps'
        friendly_name: WAN In USG Mbps
  ## WAN Out
  - platform: snmp
    name: WAN Out USG
    host: 10.10.0.1
    baseoid: 1.3.6.1.2.1.31.1.1.1.10.2
    community: 'public'
    version: '2c'
    scan_interval: 10
  - platform: derivative
    source: sensor.wan_out_usg
    unit_time: s
    unit: B
    name: wan_out_usg_derivative
  - platform: template
    sensors:
      wan_out_usg_mbps:
        value_template:  "{{ ((states('sensor.wan_out_usg_derivative')|float*8)/1000000)|round(2) }}"
        unit_of_measurement: 'Mbps'
        friendly_name: WAN Out USG Mbps
  #####################
  # ConBee/DeCONZ
  #####################        
  # ConBee Firmware
  - platform: rest
    resource: http://10.10.40.50:8080/api/7E79D96650/config
    name: current_firmware_conbee
    value_template: "{{ value_json.fwversion }}"
    scan_interval: 3600
  # DeCONZ current
  - platform: rest
    resource: http://10.10.40.50:8080/api/7E79D96650/config
    name: current_version_deconz
    value_template: "{{ value_json.swversion }}"
    scan_interval: 3600
  # DeCONZ latest
  - platform: rest
    resource: https://api.github.com/repos/dresden-elektronik/deconz-rest-plugin/releases/latest
    name: latest_version_deconz
    value_template: >
      {{ value_json.tag_name.strip('_stable').lstrip('V').replace('_','.').replace('0','') }}
    scan_interval: 3600
  
  ######################
  # Last Boot to Uptime
  ######################
  # Home Assistant VM
  - platform: template
    sensors:
      uptime_home_assistant_vm:
        friendly_name: Uptime Home Assistant VM
        value_template: >
          {%- set last_boot = states('sensor.last_boot_ha_vm') %}
          {%- if last_boot in ['unavailable', 'unknown'] or last_boot is none %}
            unknown
          {%- else %}
            {%- set uptime = now().timestamp() - as_timestamp(last_boot) %}
            {%- set time = uptime | int %}
            {%- set minutes = ((time % 3600) // 60) %}
            {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
            {%- set hours = ((time % 86400) // 3600) %}
            {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
            {%- set days = (time // 86400) %}
            {%- set days = '{}d '.format(days) if days > 0 else '' %}
            {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
          {%- endif %}
  # Network Pi
  - platform: template
    sensors:
      uptime_pi_network:
        friendly_name: Uptime Pi Netzwerk
        value_template: >
          {%- set last_boot = states('sensor.last_boot_pi_network') %}
          {%- if last_boot in ['unavailable', 'unknown'] or last_boot is none %}
            unknown
          {%- else %}
            {%- set uptime = now().timestamp() - as_timestamp(last_boot) %}
            {%- set time = uptime | int %}
            {%- set minutes = ((time % 3600) // 60) %}
            {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
            {%- set hours = ((time % 86400) // 3600) %}
            {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
            {%- set days = (time // 86400) %}
            {%- set days = '{}d '.format(days) if days > 0 else '' %}
            {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
          {%- endif %}
  # ZigBee/Z-Wave Pi
  - platform: template
    sensors:
      uptime_pi_zigbee_zwave:
        friendly_name: Uptime Pi ZigBee/ZWave
        value_template: >
          {%- set last_boot = states('sensor.last_boot_pi_zigbee_zwave') %}
          {%- if last_boot in ['unavailable', 'unknown'] or last_boot is none %}
            unknown
          {%- else %}
            {%- set uptime = now().timestamp() - as_timestamp(last_boot) %}
            {%- set time = uptime | int %}
            {%- set minutes = ((time % 3600) // 60) %}
            {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
            {%- set hours = ((time % 86400) // 3600) %}
            {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
            {%- set days = (time // 86400) %}
            {%- set days = '{}d '.format(days) if days > 0 else '' %}
            {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
          {%- endif %}
  # Office Pi
  - platform: template
    sensors:
      uptime_pi_office:
        friendly_name: Uptime Pi Büro
        value_template: >
          {%- set last_boot = states('sensor.last_boot_pi_office') %}
          {%- if last_boot in ['unavailable', 'unknown'] or last_boot is none %}
            unknown
          {%- else %}
            {%- set uptime = now().timestamp() - as_timestamp(last_boot) %}
            {%- set time = uptime | int %}
            {%- set minutes = ((time % 3600) // 60) %}
            {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
            {%- set hours = ((time % 86400) // 3600) %}
            {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
            {%- set days = (time // 86400) %}
            {%- set days = '{}d '.format(days) if days > 0 else '' %}
            {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
          {%- endif %}
  # Pi Livingroom
  - platform: template
    sensors:
      uptime_pi_livingroom:
        friendly_name: Uptime Pi Wohnzimmer
        value_template: >
          {%- set last_boot = states('sensor.last_boot_pi_livingroom') %}
          {%- if last_boot in ['unavailable', 'unknown'] or last_boot is none %}
            unknown
          {%- else %}
            {%- set uptime = now().timestamp() - as_timestamp(last_boot) %}
            {%- set time = uptime | int %}
            {%- set minutes = ((time % 3600) // 60) %}
            {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
            {%- set hours = ((time % 86400) // 3600) %}
            {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
            {%- set days = (time // 86400) %}
            {%- set days = '{}d '.format(days) if days > 0 else '' %}
            {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
          {%- endif %}
  # Dressroom Pi
  - platform: template
    sensors:
      uptime_pi_dressroom:
        friendly_name: Uptime Pi Ankleidezimmer
        value_template: >
          {%- set last_boot = states('sensor.last_boot_pi_dressroom') %}
          {%- if last_boot in ['unavailable', 'unknown'] or last_boot is none %}
            unknown
          {%- else %}
            {%- set uptime = now().timestamp() - as_timestamp(last_boot) %}
            {%- set time = uptime | int %}
            {%- set minutes = ((time % 3600) // 60) %}
            {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
            {%- set hours = ((time % 86400) // 3600) %}
            {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
            {%- set days = (time // 86400) %}
            {%- set days = '{}d '.format(days) if days > 0 else '' %}
            {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
          {%- endif %}
  # Small Bathroom Pi
  - platform: template
    sensors:
      uptime_pi_bathroomsmall:
        friendly_name: Uptime Pi Kleines Bad
        value_template: >
          {%- set last_boot = states('sensor.last_boot_pi_bathroomsmall') %}
          {%- if last_boot in ['unavailable', 'unknown'] or last_boot is none %}
            unknown
          {%- else %}
            {%- set uptime = now().timestamp() - as_timestamp(last_boot) %}
            {%- set time = uptime | int %}
            {%- set minutes = ((time % 3600) // 60) %}
            {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
            {%- set hours = ((time % 86400) // 3600) %}
            {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
            {%- set days = (time // 86400) %}
            {%- set days = '{}d '.format(days) if days > 0 else '' %}
            {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
          {%- endif %}
  #####################
  # Healthcheck.io
  #####################  
  # Home Assistant Heartbeat
  - platform: rest
    resource: !secret healthcheck_heartbeat
    name: Home Assistant Heartbeat
    scan_interval: 300
  # Healthcheck.io Status

  # Backups
  ## Home Assistant VM Status
  - platform: rest
    resource: !secret healthcheck_daily_backup_ha
    name: Daily Backup Home Assistant VM
    headers:
      X-Api-Key: !secret healthcheck_api_key
    scan_interval: 1800
    value_template: "{{ value_json.status }}"
  ## Home Assistant VM Last Backup
  - platform: rest
    resource: !secret healthcheck_daily_backup_ha
    name: Last Backup Home Assistant VM
    headers:
      X-Api-Key: !secret healthcheck_api_key
    scan_interval: 1800
    value_template: >
      {%- set last_boot = value_json.last_ping %}
      {%- set uptime = now().timestamp() - as_timestamp(last_boot) %}
      {%- set time = uptime | int %}
      {%- set minutes = ((time % 3600) // 60) %}
      {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
      {%- set hours = ((time % 86400) // 3600) %}
      {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
      {%- set days = (time // 86400) %}
      {%- set days = '{}d '.format(days) if days > 0 else '' %}
      {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
  ## Network Pi Status
  - platform: rest
    resource: !secret healthcheck_monthly_backup_network_pi
    name: Monthly Backup Network Pi
    headers:
      X-Api-Key: !secret healthcheck_api_key
    scan_interval: 1800
    value_template: "{{ value_json.status }}"
  ## Network Pi Last Backup
  - platform: rest
    resource: !secret healthcheck_monthly_backup_network_pi
    name: Last Backup Network Pi
    headers:
      X-Api-Key: !secret healthcheck_api_key
    scan_interval: 1800
    value_template: >
      {%- set last_boot = value_json.last_ping %}
      {%- set uptime = now().timestamp() - as_timestamp(last_boot) %}
      {%- set time = uptime | int %}
      {%- set minutes = ((time % 3600) // 60) %}
      {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
      {%- set hours = ((time % 86400) // 3600) %}
      {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
      {%- set days = (time // 86400) %}
      {%- set days = '{}d '.format(days) if days > 0 else '' %}
      {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
  ## ZigBee Zwave Pi Status
  - platform: rest
    resource: !secret healthcheck_monthly_backup_zigbeezwave_pi
    name: Monthly Backup ZigBee Zwave Pi
    headers:
      X-Api-Key: !secret healthcheck_api_key
    scan_interval: 1800
    value_template: "{{ value_json.status }}"
  ## ZigBee Zwave Pi Last Backup
  - platform: rest
    resource: !secret healthcheck_monthly_backup_zigbeezwave_pi
    name: Last Backup  ZigBee Zwave Pi
    headers:
      X-Api-Key: !secret healthcheck_api_key
    scan_interval: 1800
    value_template: >
      {%- set last_boot = value_json.last_ping %}
      {%- set uptime = now().timestamp() - as_timestamp(last_boot) %}
      {%- set time = uptime | int %}
      {%- set minutes = ((time % 3600) // 60) %}
      {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
      {%- set hours = ((time % 86400) // 3600) %}
      {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
      {%- set days = (time // 86400) %}
      {%- set days = '{}d '.format(days) if days > 0 else '' %}
      {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
  ## Phone Dimitri Status
  - platform: rest
    resource: !secret healthcheck_weekly_backup_phone_dimitri
    name: Weekly Backup Phone Dimitri
    headers:
      X-Api-Key: !secret healthcheck_api_key
    scan_interval: 1800
    value_template: "{{ value_json.status }}"
  ## Phone Dimitri Last Backup
  - platform: rest
    resource: !secret healthcheck_weekly_backup_phone_dimitri
    name: Last Backup Phone Dimitri
    headers:
      X-Api-Key: !secret healthcheck_api_key
    scan_interval: 1800
    value_template: >
      {%- set last_boot = value_json.last_ping %}
      {%- set uptime = now().timestamp() - as_timestamp(last_boot) %}
      {%- set time = uptime | int %}
      {%- set minutes = ((time % 3600) // 60) %}
      {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
      {%- set hours = ((time % 86400) // 3600) %}
      {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
      {%- set days = (time // 86400) %}
      {%- set days = '{}d '.format(days) if days > 0 else '' %}
      {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
  ## Phone Sabrina Status
  - platform: rest
    resource: !secret healthcheck_weekly_backup_phone_sabrina
    name: Weekly Backup Phone Sabrina
    headers:
      X-Api-Key: !secret healthcheck_api_key
    scan_interval: 1800
    value_template: "{{ value_json.status }}"
  ## Phone Dimitri Last Backup
  - platform: rest
    resource: !secret healthcheck_weekly_backup_phone_sabrina
    name: Last Backup Phone Sabrina
    headers:
      X-Api-Key: !secret healthcheck_api_key
    scan_interval: 1800
    value_template: >
      {%- set last_boot = value_json.last_ping %}
      {%- set uptime = now().timestamp() - as_timestamp(last_boot) %}
      {%- set time = uptime | int %}
      {%- set minutes = ((time % 3600) // 60) %}
      {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
      {%- set hours = ((time % 86400) // 3600) %}
      {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
      {%- set days = (time // 86400) %}
      {%- set days = '{}d '.format(days) if days > 0 else '' %}
      {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}


#####################
# Logger integration
#####################  
logger:
  default: warning

input_select:
  ####################
  # Default Log Level
  ####################
  default_log_level:
    name: Log Level
    options:
      - critical
      - fatal
      - error
      - warning
      - warn
      - info
      - debug
      - notset
    icon: mdi:math-log

automation:
  # Set Default Log Level
  - alias: "Set Default Log Level"
    initial_state: true
    trigger:
      platform: state
      entity_id: input_select.default_log_level
    action:
      service: logger.set_default_level
      data:
        level: "{{ trigger.to_state.state }}"
    mode: single
  # Notify on update available
  - id: notify_on_update_available
    alias: "Benachrichtigung wenn ein Update verfügbar ist"
    mode: parallel
    trigger:
      - platform: state
        entity_id: 
          - sensor.update_esphome
          - sensor.update_mosquitto
          - sensor.update_influxdb
          - sensor.update_grafana
          - sensor.update_portainer
          - sensor.update_unifi_poller
        to: "Update available"
      - platform: state
        entity_id: sensor.firmware_upgrade_nas
        to: "Upgrade available"
      - platform: numeric_state
        entity_id: 
          - sensor.updates_pi_bathroomsmall
          - sensor.updates_pi_livingroom
          - sensor.updates_pi_dressroom
          - sensor.updates_pi_zigbee_zwave
          - sensor.updates_pi_network
          - sensor.updates_pi_office
          - sensor.hacs
        above: 1
      - platform: template
        value_template: >
          {{ states('sensor.latest_version_deconz') > states('sensor.current_version_deconz') or
              states('sensor.latest_firmware_conbee').lstrip('0x') > states('sensor.current_firmware_conbee').lstrip('0x') or 
              states('sensor.latest_version_homeassistant') > states('sensor.current_version_homeassistant') or
              states('sensor.latest_version_pihole_core') > states('sensor.current_version_pihole_core') or
              states('sensor.latest_version_pihole_ftl') > states('sensor.current_version_pihole_ftl') or
              states('sensor.latest_version_pihole_web') > states('sensor.current_version_pihole_web') }}
    condition:
      - "{{ trigger.from_state.state != trigger.to_state.state }}"
      - "{{ trigger.from_state.state not in ['unavailable', 'unknown', 'None'] }}"
      - "{{ trigger.to_state.state not in ['unavailable', 'unknown', 'None'] }}"
    action:
      - variables:
          name: "{{ state_attr(trigger.to_state.entity_id, 'friendly_name') }}"
      - choose:
          # IF desktop is running notify phone
          - conditions: "{{ is_state('device_tracker.desktop_dimitri', 'home') }}"
            sequence:
              - service: notify.mobile_app_phone_dimitri
                data:
                  title: "{{ name }}"
                  message: "Update verfügbar"
        # ELSE create a task in Evernote
        default:
          - service: notify.evernote
            data:
              title: "{{ name }}  @1 Next #!Heute #@computer"
              message: "Update planen"
  
  # Notify on low battery level
  - id: notify_on_low_battery_level
    alias: "Benachrichtigung wenn Batterien bald leer sind"
    mode: parallel
    trigger:
      - platform: numeric_state
        entity_id:
          - sensor.battery_level_door_bathroomlarge
          - sensor.battery_level_door_bathroomsmall
          - sensor.battery_level_door_bedroom
          - sensor.battery_level_door_dressroom
          - sensor.battery_level_door_kitchen
          - sensor.battery_level_door_livingroom
          - sensor.battery_level_door_main
          - sensor.battery_level_door_office
          - sensor.battery_level_door_storageroom
          - sensor.battery_level_lux_office
          - sensor.battery_level_lux_outside
          - sensor.battery_level_motion_livingroom
          - sensor.battery_level_multisensor_bathroomsmall
          - sensor.battery_level_multisensor_bedroom
          - sensor.battery_level_multisensor_dressroom
          - sensor.battery_level_remote_dimitri
          - sensor.battery_level_remote_light_bedroom
          - sensor.battery_level_remote_light_dressroom
          - sensor.battery_level_remote_light_livingroom
          - sensor.battery_level_remote_light_office
          - sensor.battery_level_remote_sabrina
          - sensor.battery_level_temperature_bathroomsmall
          - sensor.battery_level_temperature_livingroom
          - sensor.battery_level_temperature_storageroom
          - sensor.battery_level_window_bathroomlarge
          - sensor.battery_level_window_bedroom
          - sensor.battery_level_window_dressroom
          - sensor.battery_level_window_kitchen
          - sensor.battery_level_window_livingroom
          - sensor.battery_level_window_office
        below: 20
    action:
      - service: notify.evernote
        data:
          title: "{{ state_attr(trigger.to_state.entity_id, 'friendly_name') }} Batterien wechseln  @1 Next #!Heute #@computer"
          message: "Batteriestand: {{ trigger.to_state.state }}"

  # Notify on high CPU usage
  - id: notify_on_high_cpu_usage
    alias: "Benachrichtigung wenn CPU Last hoch ist"
    mode: parallel
    trigger:
      - platform: numeric_state
        entity_id:
          - sensor.cpu_load_ha
          - sensor.cpu_load_nas
          - sensor.cpu_load_pi_bathroomsmall
          - sensor.cpu_load_pi_livingroom
          - sensor.cpu_load_pi_office
          - sensor.cpu_load_pi_dressroom
          - sensor.cpu_load_pi_network
          - sensor.cpu_load_pi_zigbee_zwave
        above: 60
        for:
          hours: 2
    action:
      - service: notify.mobile_app_phone_dimitri
        data:
          title: "Hohe CPU Last!"
          message: >
            Die CPU Last für {{ state_attr(trigger.to_state.entity_id, 'friendly_name') }} ist seit 2 Stunden über 60%!
          data:
            channel: Notfall
  
  # Notify on high Disk usage
  - id: notify_on_high_disk_usage
    alias: "Benachrichtigung wenn Speicher fast voll ist"
    mode: parallel
    trigger:
      - platform: numeric_state
        entity_id:
          - sensor.disk_use_pct_ha
          - sensor.disk_use_pct_nas
        above: 95
    action:
      - service: notify.mobile_app_phone_dimitri
        data:
          title: "Speicher fast voll!"
          message: >
            Der Speicher für {{ state_attr(trigger.to_state.entity_id, 'friendly_name') }} ist 95% voll!
          data:
            channel: Notfall
    
  # Notify on high CPU Temp
  - id: notify_on_high_cpu_temp
    alias: "Benachrichtigung wenn CPU Temperatur hoch ist"
    mode: parallel
    trigger:
      - platform: numeric_state
        entity_id:
          - sensor.nas_temperature
          - sensor.temperature_cpu_nuc
          - sensor.temperature_pi_bathroomsmall
          - sensor.temperature_pi_livingroom
          - sensor.temperature_pi_dressroom
          - sensor.temperature_pi_office
          - sensor.temperature_pi_zigbee_zwave
          - sensor.temperature_pi_network
          - sensor.temperature_switch_livingroom
        above: 70
        for:
          hours: 2
    action:
      - service: notify.mobile_app_phone_dimitri
        data:
          title: "Hohe CPU Temperatur!"
          message: >
            Die CPU Temperatur für {{ state_attr(trigger.to_state.entity_id, 'friendly_name') }} ist seit 2 Stunden über 70°!
          data:
            channel: Notfall
  
  # Notify on undervoltage
  - id: notify_on_undervoltage
    alias: "Benachrichtigung bei Unterspannung"
    mode: parallel
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.undervoltage_pi_bathroomsmall
          - binary_sensor.undervoltage_pi_livingroom
          - binary_sensor.undervoltage_pi_dressroom
          - binary_sensor.undervoltage_pi_office
          - binary_sensor.undervoltage_pi_network
          - binary_sensor.undervoltage_pi_zigbee_zwave
        to: 'on'
    action:
      - service: notify.mobile_app_phone_dimitri
        data:
          title: "Unterspannung!"
          message: >
            Unterspannung für {{ state_attr(trigger.to_state.entity_id, 'friendly_name') }} entdeckt!
          data:
            channel: Notfall


# Entity Customization
homeassistant:
  customize:
    # Lights
    binary_sensor.pve_hass_dev_running:
      friendly_name: HA dev VM
    binary_sensor.pve_hassio_test_running:
      friendly_name: HA test VM
    binary_sensor.pve_investment_running:
      friendly_name: Investment VM
    binary_sensor.pve_master_running:
      friendly_name: HA prod VM
